local renderUnit = game.ReplicatedStorage.RenderUnit
local player = game:GetService("Players").LocalPlayer
local retrieveInfo = game.ReplicatedStorage.RetrieveInfo
local contentProvider = game:GetService("ContentProvider")

renderUnit.OnClientEvent:Connect(function(model : Model)
	renderUnit(model)
end)

player.CharacterAdded:Connect(function()
	
	for _, units in pairs(workspace.Units:GetChildren()) do
		if not units:FindFirstChild("Torso") then
			task.wait()
			task.spawn(renderUnit, units)
		end
	end
end)

function renderUnit(model: Model)
	local info = retrieveInfo:InvokeServer()
	local clone = game.ReplicatedFirst.UnitDisplay:FindFirstChild(model.Name):Clone()
	clone.Parent = model
	
	repeat
		task.wait()
	until (model.PrimaryPart ~= nil and clone.Torso ~= nil)
	
	clone.PrimaryPart:PivotTo(model.PrimaryPart.CFrame + Vector3.new(0,0.25,0))
	clone.Torso.BrickColor = info[model:GetAttribute("Owner")].Color

	local weld = Instance.new("WeldConstraint")
	weld.Parent = model
	weld.Part0 = model.PrimaryPart
	weld.Part1 = clone.PrimaryPart

	for index, parts in pairs(clone:GetChildren()) do
		parts.Parent = model
	end
	clone:Destroy()
end

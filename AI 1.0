local PathfindingService = game:GetService("PathfindingService")

local raycastParams = RaycastParams.new()
raycastParams.FilterDescendantsInstances = {script.Parent}
raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
raycastParams.IgnoreWater = true

local NPC = script.Parent.Head
local Humanoid = script.Parent.Enemy
local Root = script.Parent:FindFirstChild("HumanoidRootPart")

function FindTarget(Pos)
	local list = game.Workspace:GetChildren()
	local Target = nil
	local Distance = 2500
	local temp = nil
	local temp2 = nil
	local human = nil
	for x = 1, #list do
		temp2 = list[x]
		if (temp2.ClassName == "Model") and (temp2 ~= script.Parent) then
			temp = temp2:FindFirstChild("HumanoidRootPart")
			human = temp2:FindFirstChild("Humanoid")
			if (temp ~= nil) and (human ~= nil) and (human.Health > 0) then
				if (temp.Position - Pos).Magnitude < Distance then
					Target = temp
					Distance = (temp.Position - Pos).magnitude
					script.Parent.Target.Value = temp
				end
			end
		end
	end
	return Target
end


local path = PathfindingService:CreatePath({
	AgentRadius = 6,
	AgentHeight = 5,
	WaypointSpacing = 5,
	AgentCanJump = true,
	--	Costs = {
	--	}
})

function wait(TimeToWait)
	if TimeToWait ~= nil then
		local TotalTime = 0
		TotalTime = TotalTime + game:GetService("RunService").Heartbeat:wait()
		while TotalTime < TimeToWait do
			TotalTime = TotalTime + game:GetService("RunService").Heartbeat:wait()
		end
	else
		game:GetService("RunService").Heartbeat:wait()
	end
end

function CheckDistance()
	if (target.Position - script.Parent.Torso.Position).magnitude <= 100 then
		script.Parent.Enemy.WalkSpeed = 16
		script.Parent.Attack.Value = true
	elseif (target.Position - script.Parent.Torso.Position).magnitude > 100 then
		script.Parent.Enemy.WalkSpeed = 16
		script.Parent.Attack.Value = false
	end
end

function ComputePath(Target)

	path:ComputeAsync(Root.Position, Target.Position)

	local waypoints = path:GetWaypoints()	
	local OldPosition = Target.Position
	table.remove(waypoints,1)

	for i, waypoint in ipairs(waypoints) do

		script.Parent.HumanoidRootPart:SetNetworkOwner(nil)
		
		CheckDistance()
		
		if (Target.Position - script.Parent.Torso.Position).Magnitude < 25 then
--			script.Parent.PrimaryPart.CFrame =  CFrame.lookAt(script.Parent.PrimaryPart.Position, Target.Position) * CFrame.new(0,0,0)
			task.wait()
			script.Parent:SetPrimaryPartCFrame(CFrame.lookAt(
				script.Parent.PrimaryPart.Position,
				Target.Position * Vector3.new(1, 0, 1)
					+ script.Parent.PrimaryPart.Position * Vector3.new(0, 1, 0)
				))
			break
		end

		local ray = Ray.new(NPC.Position, (Target.Position - NPC.Position).Unit * 100)
		local hit = workspace:FindPartOnRayWithIgnoreList(ray,{script.Parent})

		if Target == nil then
			script.Parent.Enemy:MoveTo(Target.Position)
		end

		Humanoid:MoveTo(waypoint.Position)

		local NewTargets = FindTarget(script.Parent.Torso.Position)

		if waypoint.Action == Enum.PathWaypointAction.Jump then
			Humanoid.Jump = true
		end

		if Target.Position ~= OldPosition or NewTargets ~= Target then
			break
		end

		Humanoid.MoveToFinished:Wait()
	end
end

script.Parent.Enemy.Died:Connect(function()
	wait(2)
	script.Parent:Destroy()
end)

while true do

	wait()

	target = FindTarget(script.Parent.Torso.Position)

	if target ~= nil and script.Parent.Enemy.Health > 0 then

		rayOrigin = script.Parent.HumanoidRootPart.Position
		rayDestination = target.Position
		rayDirection = rayDestination - rayOrigin

		raycastResult = workspace:Raycast(rayOrigin, rayDirection, raycastParams)

		CheckDistance()
		
		ComputePath(target)
	elseif script.Parent.Enemy.Health <= 0 or target == nil then
		script.Parent.Target.Value = nil
		script.Parent.Attack.Value = false
		script.Parent.Enemy.WalkSpeed = 16
	end	
end
